#+title: data steward survey 2021
#+author: Ilja Kocken

# this sets the properties for all R source code blocks, so they are all related to the session
#+property: header-args:R  :session *R:survey* :exports both :results output :eval no-export

* read in the data
#+begin_src R
  library(tidyverse)
  dat <- read_csv("dat/2021 Earth Sciences Data Steward Survey_November 29, 2021_03.23.csv",
                  trim_ws = TRUE, col_names = TRUE)
  dat <- dat |>
    tidylog::filter(StartDate != "Start Date") |>
    tidylog::filter(!stringr::str_detect(StartDate, "[{]")) |>
    type_convert(col_types = "TTccidcT?????????????????????????????????????????????????????????????") |>
    tidylog::mutate(Finished = ifelse(Finished == "True", TRUE, FALSE), Consent = ifelse(Consent == "Yes", TRUE, FALSE))

  glimpse(dat)
#+end_src

#+RESULTS:
#+begin_example
[1mindexing[0m [34m2021 Earth Sciences Data Steward Survey_November 29, 2021_03.23.csv[0m [] [32m3.71GB/s[0m, eta: [36m 0s[0m                                                                                                                   [1mRows: [22m[34m76[39m [1mColumns: [22m[34m69[39m
[36mâ”€â”€[39m [1mColumn specification[22m [36mâ”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€[39m
[1mDelimiter:[22m ","
[31mchr[39m (69): StartDate, EndDate, Status, IPAddress, Progress, Duration (in seco...

[36mâ„¹[39m Use [30m[47m[30m[47m`spec()`[47m[30m[49m[39m to retrieve the full column specification for this data.
[36mâ„¹[39m Specify the column types or set [30m[47m[30m[47m`show_col_types = FALSE`[47m[30m[49m[39m to quiet this message.
filter: removed one row (1%), 75 rows remaining
filter: removed one row (1%), 74 rows remaining
mutate: converted 'Finished' from character to logical (0 new NA)
        converted 'Consent' from character to logical (0 new NA)
Rows: 74
Columns: 69
$ StartDate                     [3m[90m<dttm>[39m[23m 2021-11-11 02:47:13, 2021-11-11 02:47:1â€¦
$ EndDate                       [3m[90m<dttm>[39m[23m 2021-11-11 02:53:02, 2021-11-11 02:59:4â€¦
$ Status                        [3m[90m<chr>[39m[23m "IP Address", "IP Address", "IP Address"â€¦
$ IPAddress                     [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ Progress                      [3m[90m<int>[39m[23m 100, 100, 100, 100, 100, 100, 100, 100, â€¦
$ `Duration (in seconds)`       [3m[90m<dbl>[39m[23m 349, 748, 719, 968, 475, 625, 439, 399, â€¦
$ Finished                      [3m[90m<lgl>[39m[23m TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUEâ€¦
$ RecordedDate                  [3m[90m<dttm>[39m[23m 2021-11-11 02:53:02, 2021-11-11 02:59:4â€¦
$ ResponseId                    [3m[90m<chr>[39m[23m "R_1GKqBPi7sB6GHDx", "R_3JF1zv2LLNwox3S"â€¦
$ RecipientLastName             [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ RecipientFirstName            [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ RecipientEmail                [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ ExternalReference             [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ LocationLatitude              [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ LocationLongitude             [3m[90m<chr>[39m[23m "*******", "*******", "*******", "******â€¦
$ DistributionChannel           [3m[90m<chr>[39m[23m "anonymous", "anonymous", "anonymous", "â€¦
$ UserLanguage                  [3m[90m<chr>[39m[23m "EN", "EN", "EN", "EN", "EN", "EN", "EN"â€¦
$ Consent                       [3m[90m<lgl>[39m[23m TRUE, TRUE, TRUE, TRUE, TRUE, TRUE, TRUEâ€¦
$ `Data Types`                  [3m[90m<chr>[39m[23m "Numerical Data (Lab observations, 3D moâ€¦
$ `Data Collection`             [3m[90m<chr>[39m[23m "Measurements from a machine (e.g. camerâ€¦
$ `Data Collection_6_TEXT`      [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, "collect rock saâ€¦
$ `Data Re-use`                 [3m[90m<chr>[39m[23m "Yes, from Research Consortiums or Data â€¦
$ `Data Re-use_5_TEXT`          [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, "From our own prâ€¦
$ `Data Storage`                [3m[90m<chr>[39m[23m "My computer or Local Storage,OneDrive",â€¦
$ `Data Storage_8_TEXT`         [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, "Dedicated storaâ€¦
$ `Data Backup`                 [3m[90m<chr>[39m[23m "My storage for ongoing projects in autoâ€¦
$ `Data Backup_3_TEXT`          [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, "EPOS serverâ€¦
$ `File Structure`              [3m[90m<chr>[39m[23m "No", "No", "Yes", "No", "No", "Yes", "Dâ€¦
$ `FAIR Application`            [3m[90m<chr>[39m[23m "No, I did not know about the FAIR data â€¦
$ Storage                       [3m[90m<chr>[39m[23m "Supplementary Information to a Paper,Maâ€¦
$ Storage_5_TEXT                [3m[90m<chr>[39m[23m NA, NA, "Pangaea", "Pangaea Data Repositâ€¦
$ Storage_6_TEXT                [3m[90m<chr>[39m[23m NA, NA, "Zenodo", NA, "zenodo", NA, "phyâ€¦
$ `Open Data Formats`           [3m[90m<chr>[39m[23m "Yes (e.g., .csv, .txt, .jpeg, .tiff, .oâ€¦
$ `Open Data Formats_3_TEXT`    [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ Conversion                    [3m[90m<chr>[39m[23m "I don't know", "I don't know", "Yes", "â€¦
$ `Project Replication`         [3m[90m<chr>[39m[23m "Yes, but others may not be able to", "Yâ€¦
$ `Metadata Provided`           [3m[90m<chr>[39m[23m "Title,Time of Data Collection,Basic Keyâ€¦
$ `Metadata Provided_10_TEXT`   [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Skip Code`                   [3m[90m<chr>[39m[23m "Yes, in a proprietary programming languâ€¦
$ Versioning                    [3m[90m<chr>[39m[23m "No, I do not use versioning", "No, I doâ€¦
$ `Publication location`        [3m[90m<chr>[39m[23m "I do not publish my code", "I do not puâ€¦
$ `Publication location_7_TEXT` [3m[90m<chr>[39m[23m NA, NA, "CRAN", NA, "zenodo", NA, NA, NAâ€¦
$ `Code License`                [3m[90m<chr>[39m[23m NA, "No", "Yes, a Creative Commons (CC) â€¦
$ `Code License_6_TEXT`         [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Code DOI`                    [3m[90m<chr>[39m[23m "Not Sure", "No", "Yes", "No", "Yes", "Yâ€¦
$ `Personal Data Bool`          [3m[90m<chr>[39m[23m "No", "Yes. I work with other sensitive â€¦
$ `Personal Data Bool_2_TEXT`   [3m[90m<chr>[39m[23m NA, "meteorites", NA, NA, NA, NA, NA, NAâ€¦
$ `GDPR Work`                   [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Privacy Review DPIA`         [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Sharing Private Data`        [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Sharing Private Data_5_TEXT` [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Personal Training`           [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Finding Privacy`             [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Finding Privacy_9_TEXT`      [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Finding Privacy_10_TEXT`     [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Neg Consequences`            [3m[90m<chr>[39m[23m NA, "I really would not know", "N.a.", "â€¦
$ `Ethic Considerations`        [3m[90m<chr>[39m[23m NA, "In the case I would acquire these kâ€¦
$ `Research Guidelines`         [3m[90m<chr>[39m[23m NA, "No", "Yes, discipline specific (pleâ€¦
$ `Research Guidelines_1_TEXT`  [3m[90m<chr>[39m[23m NA, NA, "there are many", NA, NA, NA, NAâ€¦
$ `Research Guidelines_2_TEXT`  [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, "EPOS-NL FAIâ€¦
$ `Research Guidelines_3_TEXT`  [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `Resources for RDM`           [3m[90m<chr>[39m[23m "Hands-on Workshops,Lunch & Learn Sessioâ€¦
$ `Resources for RDM_7_TEXT`    [3m[90m<chr>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ `User Data Mgmt`              [3m[90m<chr>[39m[23m NA, "No, I have not developed anything sâ€¦
$ `Any Questions`               [3m[90m<chr>[39m[23m NA, "I have no idea where to even start"â€¦
$ Contact                       [3m[90m<chr>[39m[23m "PhD candidate", "Professor (Assistant, â€¦
$ Contact_7_TEXT                [3m[90m<lgl>[39m[23m NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, â€¦
$ Q36                           [3m[90m<chr>[39m[23m "No", "Yes (please provide your email adâ€¦
$ Q36_1_TEXT                    [3m[90m<chr>[39m[23m NA, "i.l.tenkate@uu.nl", NA, NA, NA, NA,â€¦
#+end_example

** plot the answers to a single-select question
#+begin_src R :results output graphics file :file imgs/contact.png :width 600 :height 200
  dat |>
    ggplot(aes(y=Contact)) +
    geom_bar()
#+end_src

#+RESULTS:
[[file:imgs/contact.png]]

** plot the answer to a multi-select question
#+begin_src R :results output graphics file :file imgs/data_collection.png :width 600 :height 200
  dat |>
    # in this case one of the options has a comma, so we cannot split by , automatically :(
    mutate(`Data Collection` = str_replace(`Data Collection`,
                                           fixed("Measurements from a machine (e.g. camera, spectrometer, GPS/GNSS device, etc)"), "Measurements from a machine")) |>
    # this splits the multiple awnswers and puts them all in their own row, copying over the rest of the columns
    separate_rows(`Data Collection`, sep = ",") |>
    ggplot(aes(y = `Data Collection`)) +
    geom_bar()
#+end_src

#+RESULTS:
[[file:imgs/data_collection.png]]

** try out sankey diagrams
#+begin_src R :results output graphics file :file imgs/sankey_data.png :width 1000
  #remotes::install_github("davidsjoberg/ggsankey")
  library(ggsankey)

  dat |>
    make_long(`Data Types`, `Data Collection`, `Data Re-use`, `Data Storage`, `Data Backup`) |>
    ggplot(aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node))) +
    geom_sankey() +
    geom_sankey_text(aes(label = str_trunc(node, 20))) +
    theme_sankey() +
    theme(legend.pos = "none")
#+end_src

#+RESULTS:
[[file:imgs/sankey_data.png]]

#+begin_src R :results output graphics file :file imgs/sankey_open_data.png :width 800
  dat |>
    mutate(`Open Data Formats` = ifelse(is.na(`Open Data Formats`), "NA", `Open Data Formats`)) |>
    mutate(`Conversion` = ifelse(is.na(`Conversion`), "NA", `Conversion`)) |>
    make_long(`Open Data Formats`, `Conversion`) |>
    ggplot(aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node))) +
    geom_sankey(flow.alpha = 0.6, node_color = 1) +
    geom_sankey_label(aes(label = node)) +
    theme_sankey() +
    theme(legend.pos = "none")
#+end_src

#+RESULTS:
[[file:imgs/sankey_open_data.png]]

#+begin_src R :results output graphics file :file imgs/sankey_open_code.png :width 800
  dat |>
    make_long(`Skip Code`, `Versioning`) |>
    ggplot(aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node))) +
    geom_sankey(flow.alpha = 0.6, node_color = 1) +
    geom_sankey_label(aes(label = node)) +
    theme_sankey() +
    theme(legend.pos = "none")
#+end_src

#+RESULTS:
[[file:imgs/sankey_open_code.png]]


#+begin_src R :results output graphics file :file imgs/sankey_FAIR_code.png :width 800
  dat |>
    make_long(Contact, `FAIR Application`, `Skip Code`, `Publication location`, `Code License`, `Code DOI`) |>
    ggplot(aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node))) +
    geom_sankey(flow.alpha = 0.6, node_color = 1) +
    geom_sankey_text(aes(label = node), size = 3.5, angle = 45, hjust = 0) +
    theme_sankey() +
    theme(legend.pos = "none")
#+end_src

#+RESULTS:
[[file:imgs/sankey_FAIR_code.png]]

#+begin_src R :results output graphics file :file imgs/sankey_FAIR.png :width 800
  dat |>
    tidylog::mutate(across(.cols = where(~ is.character(.x)), .fns = ~ replace(.x, is.na(.x), "N/A"))) |>
    make_long(Contact, `Project Replication`, `FAIR Application`, `Skip Code`, Versioning, `Code License`, `Code DOI`) |>
    ggplot(aes(x = x, next_x = next_x, node = node, next_node = next_node, fill = factor(node))) +
    geom_sankey(flow.alpha = 0.6, node_color = 1) +
    geom_sankey_text(aes(label = node), size = 3.5, angle = 30, hjust = 0) +
    theme_sankey() +
    theme(legend.pos = "none")
#+end_src

#+RESULTS:
[[file:imgs/sankey_FAIR.png]]


** COMMENT try out alluvial
alluvial needs frequencies or numbers in the data
#+begin_src R
  # install.packages("ggalluvial")
  library(ggalluvial)

  dat |>
    ggplot(aes(axis1 = `Open Data Formats`, axis2 = `Conversion`, y = freq)) +
    geom_alluvial() +
    geom_stratum() +
    geom_text(stat = "stratum",
              aes(label = after_stat(stratum))) +
    scale_x_discrete(limits = c("Survey", "Response"),
                     expand = c(0.15, 0.05)) +
    theme_void()
#+end_src

#+RESULTS:
: Error in FUN(X[[i]], ...) : object 'freq' not found
